// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MySearch.Models;

namespace MySearch.Migrations
{
    [DbContext(typeof(SearchContext))]
    partial class SearchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MySearch.Models.SearchEngine", b =>
                {
                    b.Property<int>("SearchEngineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApiKey");

                    b.Property<string>("BaseUrl");

                    b.Property<string>("Name");

                    b.HasKey("SearchEngineId");

                    b.ToTable("SearchEngines");
                });

            modelBuilder.Entity("MySearch.Models.SearchRequest", b =>
                {
                    b.Property<int>("SearchRequestId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SearchString");

                    b.Property<DateTime>("SearshDate");

                    b.HasKey("SearchRequestId");

                    b.ToTable("SearchRequests");
                });

            modelBuilder.Entity("MySearch.Models.SearchResult", b =>
                {
                    b.Property<int>("SearchResultId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("IndexedTime");

                    b.Property<int?>("RequestSearchRequestId");

                    b.Property<int?>("SearchEngineId");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("SearchResultId");

                    b.HasIndex("RequestSearchRequestId");

                    b.HasIndex("SearchEngineId");

                    b.ToTable("SearchResults");
                });

            modelBuilder.Entity("MySearch.Models.SearchResult", b =>
                {
                    b.HasOne("MySearch.Models.SearchRequest", "Request")
                        .WithMany("SearchResults")
                        .HasForeignKey("RequestSearchRequestId");

                    b.HasOne("MySearch.Models.SearchEngine", "SearchEngine")
                        .WithMany()
                        .HasForeignKey("SearchEngineId");
                });
#pragma warning restore 612, 618
        }
    }
}
